
node(){

def gitURL = "https://github.com/devopsbymat/SonarQubeCoverageJava.git"
def gitURL1 = "https://github.com/devopsbymat/DevOpsClassCodes.git"
def branchName = "master"
def sonarHome  = tool name: 'sonar-scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
def manageremail = "rahul.ganjare@gmail.com"
def dockerpass = "Rahul#143"

try{
	stage('checkout'){
	    checkout([$class: 'GitSCM', branches: [[name: "*/${branchName}"]], extensions: [], userRemoteConfigs: [[credentialsId: 'Github-credentials', url: 
		"${gitURL1}"]]])
	}
	
	stage('build'){
        sh "ls -ltr"
	    sh "mvn clean install"
	
	}
	
	stage('sonar scanner'){
	   sh "${sonarHome}/bin/sonar-scanner"
	
	}
	
	stage('package'){
	    sh "mvn package"
	
	}
	
	echo """
      $JOB_NAME - Build # $BUILD_NUMBER - $NODE_NAME:
      check console output at $BUILD_URL to approve deployment.
    """
    
 	stage('Build-DockerImage'){
        sh "sudo docker build . -t rganjaredocker/tomcat_deploy:latest"
    }

    stage('Docker Login&Push'){
          sh "sudo docker login --username rganjaredocker --password ${dockerpass}"
          sh "sudo docker push rganjaredocker/tomcat_deploy:latest"
        }
}
catch (Exception e){
    currentBuild.result = "Failure"
    echo "Jenkins pipeline failed !! check logs"
    }
finally {
    echo "jenkins job status for build url ${BUILD_URL}: ${currentBuild.result}"
}
}
